
apiVersion: apps/v1
kind: Deployment
metadata:
  name: porthole
  namespace: porthole
  labels:
    app.kubernetes.io/name: porthole
    app.kubernetes.io/component: kubernetes-service-proxy
    app.kubernetes.io/instance: porthole
    app.kubernetes.io/version: "0.2.65"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: porthole
      app.kubernetes.io/component: kubernetes-service-proxy
      app.kubernetes.io/instance: porthole
  template:
    metadata:
      labels:
        app.kubernetes.io/name: porthole
        app.kubernetes.io/component: kubernetes-service-proxy
        app.kubernetes.io/instance: porthole
        app.kubernetes.io/version: "0.2.65"
    spec:
      serviceAccountName: porthole
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      # initContainers:
      # - name: init-config-generator
      #   image: jgoodier/porthole:0.2.65
      #   env:
      #   - name: OUTPUT_DIR
      #     value: "/app/generated-output"
      #   - name: LOG_LEVEL
      #     value: debug
      #   command: ["/bin/bash", "-c", "/app/scripts/init-container-entrypoint.sh"]
      #   securityContext:
      #     allowPrivilegeEscalation: false
      #     readOnlyRootFilesystem: false
      #     runAsNonRoot: true
      #     runAsUser: 1001
      #     runAsGroup: 1001
      #     capabilities:
      #       drop:
      #       - ALL
      #   volumeMounts:
      #   - name: app-generated-output
      #     mountPath: /app/generated-output
      #   # init-container-entrypoint.sh copies the static files to the shared-config volume
      #   - name: shared-config
      #     mountPath: /app/shared-configs
      #   - name: porthole-config
      #     mountPath: /app/src/porthole/config
      containers:
      - name: porthole
        image: jgoodier/porthole:0.2.65
        imagePullPolicy: IfNotPresent
        env:
        - name: OUTPUT_DIR
          value: "/app/generated-output"
        - name: LOG_LEVEL
          value: debug
        - name: WATCH_DIR
          value: "/app/generated-output"
        - name: STARTUP_MODE
          value: "generate"
        command: ["/app/scripts/startup.sh"]
        ports:
        - containerPort: 7070
          name: http
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: app-generated-output
          mountPath: /app/generated-output
        - name: shared-config
          mountPath: /app/shared-configs
        - name: porthole-config
          mountPath: /app/src/porthole/config
      volumes:
      - name: app-generated-output
        emptyDir: {}
      - name: shared-config
        emptyDir: {}
      - name: porthole-config
        configMap:
          name: porthole-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
