
apiVersion: apps/v1
kind: Deployment
metadata:
  name: porthole
  namespace: porthole
  labels:
    app.kubernetes.io/name: porthole
    app.kubernetes.io/component: kubernetes-service-proxy
    app.kubernetes.io/instance: porthole
    app.kubernetes.io/version: "0.2.72"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: porthole
      app.kubernetes.io/component: kubernetes-service-proxy
      app.kubernetes.io/instance: porthole
  template:
    metadata:
      labels:
        app.kubernetes.io/name: porthole
        app.kubernetes.io/component: kubernetes-service-proxy
        app.kubernetes.io/instance: porthole
        app.kubernetes.io/version: "0.2.72"
    spec:
      serviceAccountName: porthole
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001350000
        runAsGroup: 1001350000
        fsGroup: 1001350000
        fsGroupChangePolicy: OnRootMismatch
      containers:
      - name: porthole
        image: jgoodier/porthole:0.2.72
        imagePullPolicy: IfNotPresent
        env:
        - name: OUTPUT_DIR
          value: "/app/generated-output"
        - name: LOG_LEVEL
          value: debug
        - name: WATCH_DIR
          value: "/app/generated-output"
        - name: STARTUP_MODE
          value: "generate"
        command: ["/app/scripts/startup.sh"]
        ports:
        - containerPort: 7070
          name: http
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001350000
          runAsGroup: 1001350000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: app-generated-output
          mountPath: /app/generated-output
        - name: shared-config
          mountPath: /app/shared-configs
        - name: porthole-config
          mountPath: /app/src/porthole/config
        - name: logs
          mountPath: /logs
      volumes:
      - name: app-generated-output
        emptyDir: {}
      - name: shared-config
        emptyDir: {}
      - name: porthole-config
        configMap:
          name: porthole-config
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
