
apiVersion: apps/v1
kind: Deployment
metadata:
  name: porthole
  namespace: porthole
  labels:
    app.kubernetes.io/name: porthole
    app.kubernetes.io/component: kubernetes-service-proxy
    app.kubernetes.io/version: "0.2.39"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: porthole
      app.kubernetes.io/component: kubernetes-service-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: porthole
        app.kubernetes.io/component: kubernetes-service-proxy
        app.kubernetes.io/version: "0.2.39"
    spec:
      serviceAccountName: porthole
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      initContainers:
      - name: init-config-generator
        image: jgoodier/porthole:0.2.39
        env:
        - name: OUTPUT_DIR
          value: "/app/generated-output"
        - name: LOG_LEVEL
          value: debug
        command: ["/bin/bash", "-c", "/app/scripts/init-container-entrypoint.sh"]
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: app-generated-output
          mountPath: /app/generated-output
        # init-container-entrypoint.sh copies the static files to the shared-config volume
        - name: shared-config
          mountPath: /app/shared-configs
        - name: porthole-config
          mountPath: /app/src/porthole/config
      containers:
      - name: porthole
        image: jgoodier/porthole:0.2.39
        imagePullPolicy: IfNotPresent
        env:
        - name: OUTPUT_DIR
          value: "/app/generated-output"
        - name: LOG_LEVEL
          value: debug
        command: ["python", "-m", "porthole.porthole", "watch"]
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: app-generated-output
          mountPath: /app/generated-output
        - name: porthole-config
          mountPath: /app/src/porthole/config
        - name: shared-config
          mountPath: /app/shared-configs
      - name: openresty
        image: bitnami/openresty:latest
        ports:
        - name: http
          containerPort: 7070
          protocol: TCP
        volumeMounts:
          - name: app-generated-output
            mountPath: /app/generated-output
          - name: openresty-server-config
            mountPath: /opt/bitnami/openresty/nginx/conf/server_blocks
          - name: openresty-tmp
            mountPath: /opt/bitnami/openresty/nginx/tmp
          - name: shared-config
            mountPath: /app/shared-configs
      volumes:
      - name: app-generated-output
        emptyDir: {}
      - name: openresty-server-config
        configMap:
          name: openresty-server-config
      - name: openresty-tmp
        emptyDir: {}
      - name: porthole-config
        configMap:
          name: porthole-config
      - name: shared-config
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
