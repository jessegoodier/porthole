
[project]
name = "porthole"
version = "0.2.47"
description = "Portal to your k8s services"
authors = [
    { name = "Jesse Goodier", email = "31039225+jessegoodier@users.noreply.github.com" },
]
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["python"]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]

dependencies = [
    "kubernetes>=29.0.0",
    "jinja2>=3.1.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "tabulate>=0.9.0",
    "requests>=2.28.0",
    "watchdog>=3.0.0",
]

[dependency-groups]
dev = [
    "mypy >=1.16.1",
    "nox>=2025.5.1",
    "pytest>=8.4.1",
    "coverage>=7.8.2",
    "ruff>=0.12.0",
    "taskipy>=1.14.1",
    "portray>=1.8.0",
    "legacy-cgi>=2.6.3",
    "setuptools>=80.9.0",
    "pre-commit>=4.2.0",
    "types-tabulate>=0.9.0",
    "bump-my-version>=0.26.0",
    "isort>=6.0.1",
    "pillow>=11.1.0",
]

[project.urls]
homepage = "https://github.com/jessegoodier/porthole"
repository = "https://github.com/jessegoodier/porthole.git"
documentation = "https://jessegoodier.github.io/porthole"
issues = "https://github.com/jessegoodier/porthole/issues"

[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[tool.taskipy.tasks]
format = { cmd = "ruff format ./src/", help = "Format code using ruff" }
lint = { cmd = "ruff check --fix ./src/", help = "Lint code using ruff" }
type = { cmd = "mypy --strict ./src/", help = "Typecheck code using mypy" }
docs = { cmd = "portray in_browser", help = "Serve documentation in browser" }
serve = { cmd = "portray server", help = "Serve documentation" }
html = { cmd = "portray as_html", help = "Build HTML documentation" }
publish = { cmd = "portray on_github_pages", help = "Publish documentation on GitHub Pages" }
tests = { cmd = "pytest --verbose --color=yes tests", help = "Run all tests using pytest" }
nox = { cmd = "nox -s tests", help = "Run tests in a nox session" }
coverage = { cmd = "coverage run -m pytest tests && coverage report", help = "Generate coverage report" }
run = { cmd = "uv run ./src/porthole/porthole.py", help = "Run main application" }

[tool.ruff]
line-length = 100
indent-width = 4
format.indent-style = "space"
target-version = "py313"
src = ["src", "tests"]

[tool.ruff.lint]
pydocstyle.convention = "google"
fixable = ["ALL"]
select = ["ALL"]
ignore = [
    "FA102",   # Flake8-future-annotations
    "F401",    # Disable fix for unused imports
    "B904",    # Allow raising exceptions without from e
    "PLR0913", # too many arguments
    "CPY",     # Flake8-copyright
    "T201",    # Debugging print statements
    "ERA",     # Eradicate â€“ detects commented-out code
    "BLE001",  # Catch-all exceptions
    "D100",    # missing docstring in public module
    "D105",    # undocumented magic method
    "D107",    # undocumented public init
    "D203",    # incorrect-blank-line-before-class
    "D205",    # line-between-summary-and-description
    "D212",    # multi-line-summary-first-line
    "D400",    # missing-trailing-period
    "D407",    # missing-dashed-underline-after-section
    "S311",    # rand-usage
    "EM102",   # f-string-exception
    "TRY003",  # long-exception-messages
]


[tool.mypy]
files = ["src", "tests"]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = false
warn_unused_ignores = true
show_error_codes = true

[tool.coverage.report]
skip_empty = true
show_missing = true
fail_under = 100

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["_*.py", "__*.py"]

[tool.portray.mkdocs]
site_name = "porthole"

[tool.portray.mkdocs.theme]
name = "material"
custom_dir = "docs"
palette = { scheme = "slate", primary = "deep purple", accent = "purple" }
